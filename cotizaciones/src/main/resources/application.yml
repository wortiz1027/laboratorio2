# +-----------------------------------------------------
# |         SERVER CONFIG
# +-----------------------------------------------------
server:
  port: 8082
  servlet:
    context-path: /cotizaciones
    session:
      cookie:
        name: UISESSION

# +-----------------------------------------------------
# |         SPRING CONFIG
# +-----------------------------------------------------
spring:
  security:
    oauth2:
      client:
        registration:
          cotizaciones-client:
            client-id: cotizaciones_app
            client-secret: 957254c06ba79806dfa64591f6942613
            client-name: Auth Server
            scope: read,write
            provider: security-server
            redirect-uri: http://localhost:8082/cotizaciones/login/oauth2/code/
            client-authentication-method: basic
            authorization-grant-type: authorization_code
        provider:
          security-server:
            token-uri: http://${custom.security.hostname}:8081/security/oauth/token
            authorization-uri: http://${custom.security.hostname}:8081/security/oauth/authorize
            user-info-uri: http://${custom.security.hostname}:8081/security/user/me
            user-name-attribute: name
  thymeleaf:
    cache: false
  main:
    banner-mode: console
  application:
    name: cotizaciones
  datasource:
    #url: jdbc:mysql://db_cotizaciones:3306/cotizacionesdb?allowPublicKeyRetrieval=true&useSSL=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
    url: jdbc:mysql://localhost:6603/cotizacionesdb?allowPublicKeyRetrieval=true&useSSL=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: cotizaciones
    password: cotizaciones2020++
    platform: mysql
    initialization-mode: always
    #data: classpath:databases/mysql/mysql-data-v0.1.sql
    hikari:
      initialization-fail-timeout: 0
      data-source-properties:
        cachePrepStmts: true
        useServerPrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useLocalSessionState: true
        useLocalTransactionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
      pool-name: cotizacionesPoolConetion
      connection-timeout: 60000
      maximum-pool-size: 5
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

# +-----------------------------------------------------
# |         SPRING LOGGIN CONFIG
# +-----------------------------------------------------
logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.data: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.thymeleaf: TRACE
  pattern:
    console: "%d{yyyy-MMM-dd HH:mm:ss a} [%t] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

custom:
  rabbitmq:
    exchange: javecoti.exchange
    queue: javecoti.queue
    routingkey: javecoti.routingkey
  security:
    #hostname: 192.168.99.100
    hostname: localhost